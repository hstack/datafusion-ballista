# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[workspace]
members = [
    "ballista-cli",
    "ballista/cache",
    "ballista/client",
    "ballista/core",
    "ballista/executor",
    "ballista/scheduler",
    "benchmarks",
    "examples"
]
exclude = [ "python" ]
resolver = "2"

[workspace.dependencies]
arrow = { version = "51.0.0", features=["ipc_compression"] }
arrow-flight = { version = "51.0.0", features = ["flight-sql-experimental"] }
arrow-schema = { version = "51.0.0", default-features = false }
configure_me = { version = "0.4.0" }
configure_me_codegen = { version = "0.4.4" }
datafusion = "38.0.0"
datafusion-expr = "38.0.0"
datafusion-proto = "38.0.0"
datafusion-cli = "38.0.0"
object_store = "0.9.1"
sqlparser = "0.45.0"
deltalake = {  version = "0.17.3", features = ["datafusion", "datafusion-ext", "s3"] }
deltalake-aws = "0.1.2"
tonic = { version = "0.11.0" }
tonic-build = { version = "0.11.0", default-features = false, features = [
    "transport",
    "prost"
] }
tracing = "0.1.40"
tracing-appender = "0.2.2"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# the versions need to be staggered like this, or it won't compile
opentelemetry = "0.22.0"
opentelemetry_sdk = { version = "0.22.0", features = ["rt-tokio"] }
opentelemetry-otlp = "0.15.0"
tracing-opentelemetry = "0.23.0"

[profile.idea]
inherits = "dev"
opt-level = 0
debug = 2
split-debuginfo = "packed"
strip = "none"
debug-assertions = true
overflow-checks = false
incremental = true
codegen-units = 256
lto = "off"

# cargo build --profile release-lto
[profile.release-lto]
codegen-units = 1
inherits = "release"
lto = true

# the release profile takes a long time to build so we can use this profile during development to save time
# cargo build --profile release-nonlto
[profile.release-nonlto]
codegen-units = 16
debug = false
debug-assertions = false
incremental = false
inherits = "release"
lto = false
opt-level = 3
overflow-checks = false
panic = 'unwind'
rpath = false

[profile.dev]
opt-level = 1
debug = 2
split-debuginfo = "packed"

[patch.crates-io]
datafusion = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-common = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-common-runtime = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-execution = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-expr = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-functions = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-functions-array = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-optimizer = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-physical-expr = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-physical-plan = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-proto = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-sql = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
datafusion-substrait = { git = 'https://github.com/hstack/arrow-datafusion.git', branch = 'branch-38' }
deltalake = { git = 'https://github.com/hstack/delta-rs.git', branch = 'delta-ballista-interaction-38' }
deltalake-aws = { git = 'https://github.com/hstack/delta-rs.git', branch = 'delta-ballista-interaction-38' }
# for local development, you can uncomment the below
# datafusion = { path = "../arrow-datafusion/datafusion/core" }
# datafusion-common = { path = "../arrow-datafusion/datafusion/common" }
# datafusion-common-runtime = { path = "../arrow-datafusion/datafusion/common-runtime" }
# datafusion-execution = { path = "../arrow-datafusion/datafusion/execution" }
# datafusion-expr = { path = "../arrow-datafusion/datafusion/expr" }
# datafusion-functions = { path = "../arrow-datafusion/datafusion/functions" }
# datafusion-functions-array = { path = "../arrow-datafusion/datafusion/functions-array" }
# datafusion-optimizer = { path = "../arrow-datafusion/datafusion/optimizer" }
# datafusion-physical-expr = { path = "../arrow-datafusion/datafusion/physical-expr" }
# datafusion-physical-plan = { path = "../arrow-datafusion/datafusion/physical-plan" }
# datafusion-proto = { path = "../arrow-datafusion/datafusion/proto" }
# datafusion-sql = { path = "../arrow-datafusion/datafusion/sql" }
# datafusion-substrait = { path = "../arrow-datafusion/datafusion/substrait" }
# deltalake = { path = "../delta-rs/crates/deltalake" }
# deltalake-aws = { path = "../delta-rs/crates/aws" }
